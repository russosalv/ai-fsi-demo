services:
  banking-api:
    build:
      context: ./be
      dockerfile: Dockerfile
    container_name: banking-api
    ports:
      - "7086:443"  # Mappa la porta HTTPS
      - "5000:80"   # Mappa la porta HTTP
    volumes:
      - app-data:/persistence  # Volume per il backend su /persistence
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/persistence/certs/banking-api.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/swagger"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  banking-frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    container_name: banking-frontend
    ports:
      - "4200:80"
    environment:
      - API_URL=http://localhost:5000/api
    depends_on:
      banking-api:
        condition: service_healthy
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servizio per copiare il certificato dal backend per il frontend (se necessario)
  cert-extractor:
    image: alpine:latest
    container_name: cert-extractor
    volumes:
      - app-data:/backend-persistence:ro
      - ./certs:/certs
    command: >
      sh -c "
        mkdir -p /certs &&
        if [ -f /backend-persistence/certs/banking-api.crt ]; then
          cp /backend-persistence/certs/banking-api.crt /certs/
          echo 'Certificato copiato in ./certs/banking-api.crt'
        else
          echo 'Certificato non trovato in /backend-persistence/certs/'
          ls -la /backend-persistence/ || echo 'Directory non trovata'
        fi
      "
    depends_on:
      - banking-api
    networks:
      - banking-network

volumes:
  app-data:
    driver: local

networks:
  banking-network:
    driver: bridge 